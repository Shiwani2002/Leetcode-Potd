que.
Given an integer array nums, return the number of 
subarrays of length 3 such that the sum of the first and third numbers equals exactly half of the second number.

Sol-  
      int countSubarrays(vector<int>& nums) {
        int c=0;
        for(int i=0;i<nums.size()-2;i++)
        {
            if((2*(nums[i]+nums[i+2]))==nums[i+1])
                c++;
        }
        return c;
    }
